// On-demand Jenkins reporting pipeline

// Strings referencing env vars.
// We will interpolate this into the command and the shell will evaluate the env vars.
// Each stage should have `environment { SSH_HOST = credential(...) }` for the appropriate target server.
ssh_args = '-o StrictHostKeyChecking=no -o TCPKeepAlive=yes -o ServerAliveCountMax=20 -o ServerAliveInterval=15 -o "User=$SSH_USER" -i "$SSH_KEYFILE"'
ssh_host = '$SSH_HOST'
def ssh(shell_command, opts = [:]) {
  println("ssh: ${shell_command}")
  sh([script: "#!/bin/bash -e\nssh $ssh_args $ssh_host bash -e <<SSHEOF\n${shell_command}\nSSHEOF\n"] + opts)
}

pipeline {
    agent any

    environment {
        BUNDLE_DEPLOYMENT = 'true'
        SSH_HOST = credentials('2ea5f8cb-6fab-4454-b7cb-46ca2fd3cba7')
    }

    options {
        // Throttle options on multiple steps are deadlocking. Apparently the plugin people know there's a problem,
        // but don't have a great fix. Joy. So we throttle at the top level here.
        throttleJobProperty(
            categories: ['Build that needs exclusive use of x86_64 AWS worker (1)'],
            throttleEnabled: true,
            throttleOption: 'category'
        )
    }

    stages {
        stage('reporting and upload') {
            agent any

            steps {
                withCredentials([sshUserPrivateKey(credentialsId: '5a088c5c-117f-4647-982b-954973d217f9', keyFileVariable: 'SSH_KEYFILE', usernameVariable: 'SSH_USER')]) {
                  script {
                    ssh "uname -a"
                    ssh "cd ym/yjit-metrics && git pull && git checkout . && git clean -d -f reports _includes && git pull"
                    ssh "ym/yjit-metrics/continuous_reporting/gh_tasks/report_full_rebuild.sh"
                  }
                }
            }
        }
    }
}
