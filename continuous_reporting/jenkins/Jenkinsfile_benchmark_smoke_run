// Use a Jenkinsfile pipeline to run a single-iter all-benchmarks 'smoke test' across worker servers.

// See the full-benchmark-run Jenkinsfile for more documentation and commentary.

// AARCH64 SSH Key Credentials
//withCredentials([sshUserPrivateKey(credentialsId: '8f1183b4-3eae-40cc-8ef5-afce3637b181', keyFileVariable: 'FILENAME_VAR', usernameVariable: 'USERNAME_VAR')]) {
//    // some block
//}

pipeline {
    agent any

    parameters {
        string(name: 'RUBY_VERSION', defaultValue: 'master', description: 'what revision of Ruby to build')

        string(name: 'YJIT_METRICS_VERSION', defaultValue: 'main', description: 'what revision of yjit-metrics to build with')
        string(name: 'YJIT_BENCH_VERSION', defaultValue: 'main', description: 'what revision of yjit-bench to build with')
        //string(name: 'RUBY_REPO', defaultValue: '', description: 'what repo to build Ruby from')

        // The benchmark timestamp can't be input manually, so it's not a parameter here
    }

    stages {
        stage('run full build') {
            steps {
                build(job: 'benchmark_full_run', parameters: [
                    RUBY_VERSION: params.RUBY_VERSION,
                    YJIT_METRICS_VERSION: params.YJIT_METRICS_VERSION,
                    YJIT_BENCH_VERSION: params.YJIT_BENCH_VERSION,
                    BENCH_TYPE: 'smoketest',
                    DATA_DIR: 'continuous_reporting/single_iter_data',
                    SLACK_FAILURE_NOTIFY: '',
                ])
            }
        }
    }

    post {
        success {
            slackSend color: "#00FF00", message: "YJIT benchmark smoke test succeeded!"
        }
        failure {
            // Need to expand this, based on https://plugins.jenkins.io/slack/
            slackSend color: "#FF0000", message: "YJIT benchmark smoke test failed!"
        }
    }
}
