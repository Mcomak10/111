// Use a Jenkinsfile pipeline to run a single-iter all-benchmarks 'smoke test' across worker servers.

// See the full-benchmark-run Jenkinsfile for more documentation and commentary.

pipeline {
    agent any

    parameters {
        string(name: 'RUBY_VERSION', defaultValue: 'master', description: 'what revision of Ruby to build')

        string(name: 'YJIT_METRICS_VERSION', defaultValue: 'main', description: 'what revision of yjit-metrics to build with')
        string(name: 'YJIT_BENCH_VERSION', defaultValue: 'main', description: 'what revision of yjit-bench to build with')

        string(name: 'BENCH_TYPE', defaultValue: 'smoketest', description: 'Benchmark type -- "smoketest" is one iter of all benchmarks, can also give none or full spec')
    }

    environment {
        SLACK_OAUTH_TOKEN = credentials('684cd699-feae-4ef1-8483-e71440a73fcd')
    }

    stages {
        stage('run configurable build') {
            steps {
                build job: 'benchmark_configurable_run',
                  parameters: [
                    string(name: 'RUBY_VERSION', value: params.RUBY_VERSION),
                    string(name: 'YJIT_METRICS_VERSION', value: params.YJIT_METRICS_VERSION),
                    string(name: 'YJIT_BENCH_VERSION', value: params.YJIT_BENCH_VERSION),
                    string(name: 'BENCH_TYPE', value: params.BENCH_TYPE),
                    string(name: 'DATA_DIR', value: 'continuous_reporting/single_iter_data'),
                    booleanParam(name: 'DO_FULL_REBUILD', value: false)
                ]
            }
        }
    }

    post {
        success {
            sh "bash -l -c 'chruby 3.0.2 && bundle'"
            sh "bash -l -c 'chruby 3.0.2 && ruby continuous_reporting/slack_build_notifier.rb --template build_status --channels \"${params.SLACK_FAILURE_NOTIFY}\" --properties \"status=success\" \"Smoke test succeeded!\"'"
        }
        failure {
            sh "bash -l -c 'chruby 3.0.2 && bundle'"
            sh "bash -l -c 'chruby 3.0.2 && ruby continuous_reporting/slack_build_notifier.rb --template build_status --channels "${params.SLACK_FAILURE_NOTIFY}\" --properties \"status=fail\" \"Smoke test failed!\"'"
        }
    }
}
